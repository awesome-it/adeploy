apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ name }}-{{ release }}
  namespace: {{ namespace }}
  labels:
    app.kubernetes.io/component: main
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: main
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/component: main
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - name: main
          image: nginx:latest
          imagePullPolicy: Always
          {{ include_file('my-service/__common_env.yml', direct=True, indent=10) }}
          volumeMounts:
            - mountPath: /service.conf
              name: config
              subPath: service.conf
              readOnly: true
            - mountPath: /my-secret
              name: secrets
              subPath: my-secret
              readOnly: true
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          livenessProbe:
            httpGet:
              path: /_healthz
              port: 80
            initialDelaySeconds: 3
            timeoutSeconds: 2
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /_healthz
              port: 80
            initialDelaySeconds: 3
            timeoutSeconds: 2
            failureThreshold: 2
      volumes:
        - name: secrets
          secret:
            secretName: {{ secrets.service }}
        - name: binary-secrets
          secret:
            secretName: {{ secrets.binary }}
        - name: config
          configMap:
            name: {{ name }}-{{ release }}-config
