# --8<-- [start:use_labels] -->
apiVersion: apps/v1
kind: Deployment
metadata:
  name: 005-labels-prod
  namespace: playground
  labels: {'app.kubernetes.io/name': 'nginx', 'app.kubernetes.io/instance': '005-labels-prod',
    'app.kubernetes.io/part-of': '005-labels', 'app.kubernetes.io/managed-by': 'adeploy',
    app.kubernetes.io/component: nginx, my.custom.labels/test: my-label}
spec:
  selector:
    matchLabels: {'app.kubernetes.io/name': 'nginx', 'app.kubernetes.io/instance': '005-labels-prod',
      'app.kubernetes.io/part-of': '005-labels', 'app.kubernetes.io/managed-by': 'adeploy',
      app.kubernetes.io/component: nginx, my.custom.labels/test: my-label}
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels: {'app.kubernetes.io/name': 'nginx', 'app.kubernetes.io/instance': '005-labels-prod',
        'app.kubernetes.io/part-of': '005-labels', 'app.kubernetes.io/managed-by': 'adeploy',
        app.kubernetes.io/component: nginx, my.custom.labels/test: my-label}
# --8<-- [end:use_labels] -->
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: main
        image: nginx:1.22
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 3
          timeoutSeconds: 2
          failureThreshold: 2
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 3
          timeoutSeconds: 2
          failureThreshold: 2
