apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ name }}-{{ release }}-redis
  namespace: {{ namespace }}
  labels:        
    app.kubernetes.io/part-of: {{ name }}
    app.kubernetes.io/instance: {{ release }}
    app.kubernetes.io/component: redis
spec:
  selector:
    matchLabels:
      app.kubernetes.io/part-of: {{ name }}
      app.kubernetes.io/instance: {{ release }}
      app.kubernetes.io/component: redis
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  # --8<-- [start:template] -->
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: {{ name }}
        app.kubernetes.io/instance: {{ release }}
        app.kubernetes.io/component: redis
      annotations:
        checksum/config: |
          {{ include_file("common/configmap.yml") | sha256sum }}
    spec:
      {{ include_file('common/__affinity.yml', direct=True, indent=6) }}
      containers:
        - name: main
          image: {{ redis.image }}:{{ version('redis') }}
          imagePullPolicy: Always
          {{ include_file('common/__env.yml', direct=True, indent=10) }}
          ports:
            - name: redis
              containerPort: 6379
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            timeoutSeconds: 5
  # --8<-- [end:template] -->