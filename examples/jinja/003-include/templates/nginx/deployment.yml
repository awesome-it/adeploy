apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ name }}-{{ release }}-nginx
  namespace: {{ namespace }}
  labels:        
    app.kubernetes.io/part-of: {{ name }}
    app.kubernetes.io/instance: {{ release }}
    app.kubernetes.io/component: nginx
spec:
  selector:
    matchLabels:
      app.kubernetes.io/part-of: {{ name }}
      app.kubernetes.io/instance: {{ release }}
      app.kubernetes.io/component: nginx
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  # --8<-- [start:template] -->
  # --8<-- [start:example-sha256] -->
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: {{ name }}
        app.kubernetes.io/instance: {{ release }}
        app.kubernetes.io/component: nginx
      annotations:
        checksum/config: |
          {{ include_file("common/configmap.yml") | sha256sum }}
    # --8<-- [end:example-sha256] -->
    spec:
      {{ include_file('common/__affinity.yml', direct=True, indent=6) }}
      containers:
        - name: main
          image: {{ nginx.image }}:{{ version('nginx') }}
          imagePullPolicy: Always
          {{ include_file('common/__env.yml', direct=True, indent=10) }}
          volumeMounts:
            - mountPath: /etc/nginx/nginx.conf
              name: config
              subPath: nginx.conf
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: {{ name }}-{{ release }}-config
  # --8<-- [end:template] -->