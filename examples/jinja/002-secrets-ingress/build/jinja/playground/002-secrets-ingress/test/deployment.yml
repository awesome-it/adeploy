apiVersion: apps/v1
kind: Deployment
metadata:
  name: 002-secrets-ingress-test
  namespace: playground
  labels:
    app.kubernetes.io/part-of: 002-secrets-ingress
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: nginx
spec:
  selector:
    matchLabels:
      app.kubernetes.io/part-of: 002-secrets-ingress
      app.kubernetes.io/instance: test
      app.kubernetes.io/component: nginx
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: 002-secrets-ingress
        app.kubernetes.io/instance: test
        app.kubernetes.io/component: nginx
    spec:
      terminationGracePeriodSeconds: 60
      imagePullSecrets:
      - name: secret-7929a442fae0ceee9eef9558a9a2ef02cc9d4421
      containers:
      - name: main
        image: nginx:1.23
        imagePullPolicy: Always
        env:
        - name: MY_SECRET
          valueFrom:
            secretKeyRef: {'name': 'secret-f310a9ad786b3fb5f7160436346e69795693b951',
              'key': 'my_secret'}
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 3
          timeoutSeconds: 2
          failureThreshold: 2
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 3
          timeoutSeconds: 2
          failureThreshold: 2
